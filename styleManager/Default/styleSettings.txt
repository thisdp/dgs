---------------------------------------------------------------
--------------------------WARNING------------------------------
---This File Is Default Style Settings, Don't Edit This File!
---If This File Is Broken,Update DGS To Recover!
---------------------------------------------------------------
---How to make your own style?
---See: http://wiki.mtasa.com/Dgs/StyleManager
---The syntax of this file is lua table.
---------------------------------------------------------------
---------------------------------------------------------------

---------------------------------------------------------------------------------------------------General
	sharedTexture = true,	--Optimization ( Set to true to share texture element with the same creation data to prevent creating duplicated texture elements)
	sharedFont = true,		--Optimization ( Set to true to share font element with the same creation data to prevent creating duplicated texture elements)
	disabledColor = true,
	disabledColorPercent = 0.8,
	systemFont="default",	--For custom, systemFont="font.ttf", or systemFont={"font.ttf",Size,isBold,Quality} . This path is relative to the style path
	changeOrder=true,	--Change render order when click dgs element
---------------------------------------------------------------------------------------------------Cursor
	cursor = {
		enableCustomCursor = false,
		arrow = {										--arrow cursor
			image = {"Images/cursor/CursorArrow.png"},	--Image
			rotation = 0,								--Rotation
			rotationCenter = {0,0},						--Rotation Center (Relative)
			offset = {0,0},								--Offset (Relative)
			scale = 1,									--Scale
		},
		sizing_ns = {				           			--N-S (up-down) sizing cursor
			image = {"Images/cursor/CursorResize.png"},	--Image
			rotation = 0,								--Rotation
			rotationCenter = {0,0},						--Rotation Center (Relative)
			offset = {-0.5,-0.5},						--Offset (Relative)
			scale = 1.2,								--Scale
		},
		sizing_ew ={				            		--E-W (left-right) sizing cursor
			image = {"Images/cursor/CursorResize.png"},	--Image
			rotation = 90,								--Rotation
			rotationCenter = {0,0},						--Rotation Center (Relative)
			offset = {-0.5,-0.5},						--Offset (Relative)
			scale = 1.2,								--Scale
		},
		sizing_nwse = {				           			--NW-SE diagonal sizing cursor
			image = {"Images/cursor/CursorResize.png"},	--Image
			rotation = -45,								--Rotation
			rotationCenter = {0,0},						--Rotation Center (Relative)
			offset = {-0.5,-0.5},						--Offset (Relative)
			scale = 1.2,								--Scale
		},
		sizing_nesw = {				           			--NE-SW diagonal sizing cursor
			image = {"Images/cursor/CursorResize.png"},	--Image
			rotation = 45,								--Rotation
			rotationCenter = {0,0},						--Rotation Center (Relative)
			offset = {-0.5,-0.5},						--Offset (Relative)
			scale = 1.2,								--Scale
		},
		move = {					        			--Move
			image = {"Images/cursor/CursorMove.png"},	--Image
			rotation = 0,								--Rotation
			rotationCenter = {0,0},						--Rotation Center (Relative)
			offset = {-0.5,-0.5},						--Offset (Relative)
			scale = 1.2,								--Scale
		},
		text = {					        			--I-Beam cursor
			image = {"Images/cursor/CursorText.png"},	--Image
			rotation = 0,								--Rotation
			rotationCenter = {0,0},						--Rotation Center (Relative)
			offset = {-0.5,-0.5},						--Offset (Relative)
			scale = 1,									--Scale
		},
		pointer = {                            			--Pointer
			image = {"Images/cursor/CursorPointer.png"},--Image
			rotation = 0,								--Rotation
			rotationCenter = {0,0},						--Rotation Center (Relative)
			offset = {-0.25,0},								--Offset (Relative)
			scale = 1.2,									--Scale
		},
	},
---------------------------------------------------------------------------------------------------Unique
-----------------------------------------------------------------------------------DGS 3D Text
	text3D = {
		font = false,	--Using systemFont ( and usage is the same as system font )
	},

---------------------------------------------------------------------------------------------------Unique
-----------------------------------------------------------------------------------DGS Button
	button = {
	---Color
		textColor = tocolor(255,255,255,255),	--Button text color
		color = {	--Button background color
			tocolor(85,90,100,220),			--Normal
			tocolor(90,160,230,220),		--Hover
			tocolor(60,110,180,220),		--Click
		},
	---Image
		image = {	--Button background color
			{},	--Normal
			{},	--Hover
			{},	--Click
		},
	---Values
		font = false,	--Using systemFont ( and usage is the same as system font )
		textSize = {1,1},
	},

-----------------------------------------------------------------------------------DGS Check Box
	checkbox = {
	---Color
		textColor = tocolor(255,255,255,255),	--Text Color
		colorUnchecked = {	--Default image color when state is false ( unchecked )
			tocolor(255,255,255,255),	--Normal
			tocolor(255,255,255,255),	--Hover
			tocolor(180,180,180,255),	--Click
		},
		colorIndeterminate = {	--Default image color when state is nil ( indeterminate )
			tocolor(255,255,255,255),	--Normal
			tocolor(255,255,255,255),	--Hover
			tocolor(180,180,180,255),	--Click
		},
		colorChecked = {	--Default image color when state is true ( checked )
			tocolor(255,255,255,255),	--Normal
			tocolor(255,255,255,255),	--Hover
			tocolor(180,180,180,255),	--Click
		},
	---Image
		imageUnchecked = {	--Default image when state is false ( unchecked )
			{"Images/checkbox/cbUnchecked.png"},	--Normal
			{"Images/checkbox/cbUnchecked_s.png"},	--Hover
			{"Images/checkbox/cbUnchecked.png"},	--Click
		},
		imageIndeterminate = {	--Default image when state is nil ( indeterminate )
			{"Images/checkbox/cbIndeterminate.png"},	--Normal
			{"Images/checkbox/cbIndeterminate_s.png"},	--Hover
			{"Images/checkbox/cbIndeterminate.png"},	--Click
		},
		imageChecked = {	--Default image when state is true ( checked )
			{"Images/checkbox/cbChecked.png"},	--Normal
			{"Images/checkbox/cbChecked_s.png"},	--Hover
			{"Images/checkbox/cbChecked.png"},	--Click

		},
	---Values
		font = false,	--Using systemFont ( and usage is the same as system font )
		textSize = {1,1},	--Text size
		textPadding = {
			2,		--Space
			false,	--Relative
		},
		buttonSize = {
			16,		--Button size
			false,	--Relative
		},
	},

-----------------------------------------------------------------------------------DGS Combo Box
	combobox = {
	---Color
		bgColor = false,	--Background color of the combo box
		textColor = tocolor(255,255,255,255),		--Text color
		color = {	--Background color of the arrow button
			tocolor(85,90,100,220),			--Normal
			tocolor(90,160,230,220),		--Hover
			tocolor(60,110,180,220),		--Select
		},
		itemColor = {	--Background color of items
			tocolor(30,32,35,255),			--Normal
			tocolor(80,85,90,255),			--Hover
			tocolor(70,140,210,255),		--Select
		},
		itemTextColor = tocolor(255,255,255,255),	--Item text color
		arrowColor = tocolor(255,255,255,255),
		arrowOutSideColor = tocolor(255,255,255,255),
	---Image
		arrow = {	--Arrow Image
			"Images/combobox/arrow.fx",	--File Path
			"shader",					--Texture type (Default is "image")
			{},							--Shader Settings
		},
		image = {
			{},	--Normal
			{},	--Hover
			{},	--Select
		},
		itemImage = {
			{},	--Normal
			{},	--Hover
			{},	--Select
		},
		bgImage = {},
	---Values
		font = false,	--Using systemFont ( and usage is the same as system font )
		textSize = {1,1},
		itemTextSize = {1,1},
		itemHeight = 20,
		arrowSettings = {0.2,0.1,0.02},
		itemTextPadding = {5,5},
		textPadding = {5,5},
		scrollBarThick = 15,
		autoHideAfterSelected=true,
	},
-----------------------------------------------------------------------------------DGS Menu
	menu = {
	---Color
		bgColor = tocolor(43,43,43,255),
		itemColor = {
			tocolor(43,43,43,255),	--Normal
			tocolor(65,65,65,255),	--Hover
		},
		itemTextColor = tocolor(255,255,255,255),
	---Image
		bgImage = nil,
		itemImage = {
			{},	--Normal
			{},	--Hover
		},
	---Values
		itemHeight = 20,
		itemGap = 0,
		itemTextOffset = {10,false},
		itemTextSize = {1,1},
		padding = {4,4},
		separatorTextColor = tocolor(128,128,128,255),
		separatorHeight = 1,
		separatorGap = 8,
		separatorLine = {
			0.05,	--Start
			0.95,	--End
			true,	--Relative
		},
		font = false,	--Using systemFont ( and usage is the same as system font )
	},
-----------------------------------------------------------------------------------DGS Radio Button
	radiobutton = {
	---Color
		textColor = tocolor(255,255,255,255),	--Text Color
		colorUnchecked = {	--Default image color when state is false ( unselected )
			tocolor(255,255,255,255),	--Normal
			tocolor(255,255,255,255),	--Hover
			tocolor(180,180,180,255),	--Click
		},
		colorChecked = {	--Default image color when state is true ( selected )
			tocolor(255,255,255,255),	--Normal
			tocolor(255,255,255,255),	--Hover
			tocolor(180,180,180,255),	--Click
		},
	---Image
		imageUnchecked = {	--Default image when state is false ( unchecked )
			{"Images/radiobutton/rbUnchecked.png"},		--Normal
			{"Images/radiobutton/rbUnchecked_s.png"},	--Hover
			{"Images/radiobutton/rbUnchecked.png"},		--Click
		},
		imageChecked = {	--Default image when state is true ( checked )
			{"Images/radiobutton/rbChecked.png"},		--Normal
			{"Images/radiobutton/rbChecked_s.png"},	--Hover
			{"Images/radiobutton/rbChecked.png"},		--Click
		},
	---Values
		font = false,	--Using systemFont ( and usage is the same as system font )
		textSize = {1,1},	--Text size
		textPadding = {
			2,		--Space
			false,	--Relative
		},
		buttonSize = {
			16,		--Button size
			false,	--Relative
		},
	},

-----------------------------------------------------------------------------------DGS Edit
	edit = {
	---Color
		bgColor = tocolor(85,90,100,255),		--Background color of edit
		bgColorBlur = false,		--Background color of edit when blur, set to nil/false to use bgColor
		textColor = tocolor(255,255,255,255),			--Text color
		caretColor = tocolor(255,255,255,255),		--Caret color
		selectColor = tocolor(50,150,255,200),	--Select background color
		selectColorBlur = tocolor(140,140,140,200),	--Selected background color when blurred
		placeHolderColor = tocolor(200,200,200,255),		--Place holder text color
	---Image
		bgImage = {},	--Background image of edit
		bgImageBlur = {},	--Background image of edit when blur, set to empty or nil/false to use bgImage
	---Values
		font = false,	--Using systemFont ( and usage is the same as system font )
		textSize = {1,1},	--Text size
		maskText = "*",
		padding = {2,2},
		caretStyle = 0,
		caretThick = 1.2,
		caretOffset = 0,
		caretHeight = 1,
		typingSound = false,
		typingSoundVolume = 1,
		placeHolder = "",
		placeHolderColorCoded = false,
		placeHolderOffset = {0,0},
		placeHolderTextSize = false,	---Use textSize if set to false/nil
		placeHolderIgnoreRenderTarget = false,
	},

-----------------------------------------------------------------------------------DGS Grid List
	gridlist = {
	---Color
		bgColor = tocolor(30,32,35,225),		--Background color of grid list
		columnColor = tocolor(30,32,35,255),	--Background color of column
		columnTextColor = tocolor(255,255,255,255),	--Column text color
		rowColor = {	--Background color of row
			tocolor(30,32,35,255),			--Normal
			tocolor(54,57,64,255),			--Hover
			tocolor(70,140,210,255),		--Select
		},
		rowTextColor = tocolor(255,255,255,255),	--Row text color
	---Image
		bgImage = {},
		columnImage = {},
		rowImage = {
			{},
			{},
			{},
		},

	---Values
		font = false,	--Using systemFont ( and usage is the same as system font )
		columnTextSize = {1,1},
		rowTextSize = {1,1},
		columnOffset = 10,
		columnHeight = 20,
		rowHeight = 15,
		sectionColumnOffset = -10,
		defaultColumnOffset = 0,
		bgOffset = -10,
		scrollBarThick = 15,
	},

-----------------------------------------------------------------------------------DGS Label
	label = {
	---Color
		textColor = tocolor(255,255,255,255),	--Label text color
	---Image

	---Values
		font = false,	--Using systemFont ( and usage is the same as system font )
		textSize = {1,1},
	},

-----------------------------------------------------------------------------------DGS Memo
	memo = {
	---Color
		bgColor = tocolor(85,90,100,255),	--Background color of memo
		bgColorBlur = false,		--Background color of memo when blur, set to nil/false to use bgColor
		textColor = tocolor(255,255,255,255),		--Text color
		caretColor = tocolor(255,255,255,255),	--Caret color
		selectColor = tocolor(50,150,255,200),	--Select background color
		selectColorBlur = tocolor(140,140,140,200),	--Selected background color when blurred
		placeHolderColor = tocolor(200,200,200,255),		--Place holder text color
	---Image
		bgImage = {},	--Background image of memo
		bgImageBlur = {},	--Background image of memo when blur, set to empty or nil/false to use bgImage
	---Values
		font = false,	--Using systemFont ( and usage is the same as system font )
		textSize = {1,1},	--Text size
		maskText = "*",
		caretStyle = 0,
		caretThick = 1.2,
		caretOffset = 0,
		caretHeight = 1,
		scrollBarThick = 15,
		selectVisible = true,
		typingSound = false,
		typingSoundVolume = 1,
		padding = {2,2},
		placeHolder = "",
		placeHolderColorCoded = false,
		placeHolderOffset = {0,0},
		placeHolderTextSize = false,	---Use textSize if set to false/nil
		placeHolderIgnoreRenderTarget = false,
	},

-----------------------------------------------------------------------------------DGS Progress Bar
	progressbar = {
	---Color
		bgColor = tocolor(5,10,20,200),		--Background color of progress bar
		indicatorColor = tocolor(80,140,210,200),--Background color of progress bar indicator
	---Image
		bgImage = {},
		indicatorImage = {},
	---Values
		padding = {2,2},
	},

-----------------------------------------------------------------------------------DGS Scroll Bar
	scrollbar = {
	---Color
		cursorColor = {	--Cursor image color
			tocolor(79,83,91,255),		--Normal
			tocolor(90,160,230,255),		--Hover
			tocolor(60,110,180,255),		--Click
		},
		arrowColor = {	--Arrow color
			tocolor(240,240,240,255),		--Normal
			tocolor(90,160,230,255),		--Hover
			tocolor(60,110,180,255),		--Click
		},
		troughColor = {	--Trough color
			tocolor(30,30,30,255),	--Part 1
			tocolor(30,30,30,255),	--Part 2
		},
	---Image
		arrowImage = {"Images/scrollbar/scrollbar_arrow.png"},		--Arrow image
		cursorImage = false,										--Cursor image
		troughImage = false,										--Trough image for vertical and horizontal
		troughImageHorizontal = false,								--Trough image for horizontal only
		arrowBgColor = {
			tocolor(30,30,30,255),	--Normal
			tocolor(30,30,30,255),	--Hover
			tocolor(30,30,30,255),	--Click
		},
	---Values
		scrollArrow = true,
		cursorWidth = {1,true},
		troughWidth = false,	--False for using cursorWidth
		arrowWidth = false,	--False for using cursorWidth
		imageRotation = {
			{270,270,0},--{Horizontal}, (arrows,cursor,trough)
			{0,0,0},--{Vertical}, (arrows,cursor,trough)
		}
	},

-----------------------------------------------------------------------------------DGS Scroll Pane
	scrollpane = {
	---Color

	---Image

	---Values
		scrollBarThick = 15,
	},
	
-----------------------------------------------------------------------------------DGS Scale Pane
	scalepane = {
	---Color

	---Image

	---Values
		scrollBarThick = 15,
	},

-----------------------------------------------------------------------------------DGS Selector
	selector = {
	---Color
		itemTextColor = tocolor(255,255,255,255),	--Item Text Color
		selectorText = {"<",">"},
		selectorTextColor = {
			tocolor(255,255,255,255),		--Normal
			tocolor(90,160,230,220),		--Hover
			tocolor(60,110,180,220),		--Click
		},
		selectorImageLeft = {
			nil,		--Normal
			nil,		--Hover
			nil,		--Click
		},
		selectorImageColorLeft = {
			nil,		--Normal
			nil,		--Hover
			nil,		--Click
		},
		selectorImageRight = {
			nil,		--Normal
			nil,		--Hover
			nil,		--Click
		},
		selectorImageColorRight = {
			nil,		--Normal
			nil,		--Hover
			nil,		--Click
		},
	---Values
		font = false,	--Using systemFont ( and usage is the same as system font )
		selectorTextSize = {1,1},
		itemTextSize = {1,1},

	},
-----------------------------------------------------------------------------------DGS Switch Button
	switchbutton = {
	---Color
		textColorOn = tocolor(250,250,250,255),	--Text Color
		textColorOff = tocolor(250,250,250,255),	--Text Color
		colorOn = {	--Default image color when state is true (On)
			tocolor(90,160,230,255),	--Normal
			tocolor(90,160,230,255),	--Hover
			tocolor(90,160,230,255),	--Click
		},
		colorOff = {	--Default image color when state is false (Off)
			tocolor(60,60,60,255),	--Normal
			tocolor(60,60,60,255),	--Hover
			tocolor(60,60,60,255),	--Click
		},
		cursorColor = {	--Default image color when state is true ( selected )
			tocolor(220,220,220,255),	--Normal
			tocolor(240,240,240,255),	--Hover
			tocolor(200,200,200,255),	--Click
		},
	---Image
		imageOn = {	--Default image when state is false ( unchecked )
			nil,		--Normal
			nil,		--Hover
			nil,		--Click
		},
		imageOff = {	--Default image when state is true ( checked )
			nil,		--Normal
			nil,		--Hover
			nil,		--Click
		},
		cursorImage = {
			nil,		--Normal
			nil,		--Hover
			nil,		--Click
		},
	---Values
		font = false,	--Using systemFont ( and usage is the same as system font )
		textSize = {1,1},
		textOffset = {0.25,true},
		troughWidth = {1,true},
		cursorWidth = {1,true},
		cursorLength = {0.5,true},
	},

-----------------------------------------------------------------------------------DGS Tab Panel
	tabpanel = {
	---Color
		bgColor = tocolor(54,57,64,255),	--Background color of tab panel
		textColor = {						--If tab doesn't have color, use this one.
			tocolor(255,255,255,255),	--Normal
			tocolor(255,255,255,255),	--Hovered
			tocolor(255,255,255,255),	--Selected
		},
		tabColor = {						--Color of tab, if tab doesn't have this property, use this one
			tocolor(50,50,50,180),	--Normal
			tocolor(80,80,80,190),	--Hovered
			tocolor(54,57,64,255),	--Selected
		},
	---Image
		bgImage = {},
		tabImage = {						--Image of tab, if tab doesn't have this property, use this one
			{},
			{},
			{},
		},
	---Values
		font = false,	--Using systemFont ( and usage is the same as system font )
		tabPadding = {4,false},
		tabGapSize = {1,false},
		scrollSpeed = {10,false},
		tabHeight = 20,
	},

-----------------------------------------------------------------------------------DGS Tab
	tab = {
	---Color
		textColor = tocolor(255,255,255,255),		--Use Tab Panel's
	---Values
		font = false,	--Using tab panel's font
		textSize = {1,1},
	},

-----------------------------------------------------------------------------------DGS Window
	window = {
	---Color
		textColor = tocolor(255,255,255,255),		--Window title text color
		titleColor = tocolor(40,40,40,240),			--Window title background color
		titleColorBlur = tocolor(20,20,20,240),		--Window title background color when blurred
		color = tocolor(30,32,35,235),				--Window background color
		closeButtonColor = {	--Window close button color
			tocolor(0,0,0,0),	--Normal
			tocolor(250,20,20,255),	--Hover
			tocolor(150,50,50,255),	--Click
		},
	---Image
		image = {},
		titleImage = {},
	---Values
		closeButton = true,
		font = false,	--Using systemFont ( and usage is the same as system font )
		textSize = {1,1},
		titleHeight = 25,
		borderSize = 5,
		closeButtonText = "×",
	},
